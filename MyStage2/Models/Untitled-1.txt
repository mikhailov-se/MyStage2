




        //// GET: Announsments/Details/5
        //public async Task<IActionResult> Details(int? id)
        //{
        //    if (id == null)
        //    {
        //        return NotFound();
        //    }

        //    var announsment = await _context.Announsment
        //        .FirstOrDefaultAsync(m => m.Id == id);
        //    if (announsment == null)
        //    {
        //        return NotFound();
        //    }

        //    return View(announsment);
        //}

        //// GET: Announsments/Create
        //public IActionResult Create()
        //{
        //    return View();
        //}

        //// POST: Announsments/Create
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public async Task<IActionResult> Create([Bind("Id,Number,CreateDate,TextAnnounsment,Rating")] Announsment announsment)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        _context.Add(announsment);
        //        await _context.SaveChangesAsync();
        //        return RedirectToAction(nameof(Index));
        //    }
        //    return View(announsment);
        //}

        //// GET: Announsments/Edit/5
        //public async Task<IActionResult> Edit(int? id)
        //{
        //    if (id == null)
        //    {
        //        return NotFound();
        //    }

        //    var announsment = await _context.Announsment.FindAsync(id);
        //    if (announsment == null)
        //    {
        //        return NotFound();
        //    }
        //    return View(announsment);
        //}

        //// POST: Announsments/Edit/5
        //// To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        //// more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public async Task<IActionResult> Edit(int id, [Bind("Id,Number,CreateDate,TextAnnounsment,Rating")] Announsment announsment)
        //{
        //    if (id != announsment.Id)
        //    {
        //        return NotFound();
        //    }

        //    if (ModelState.IsValid)
        //    {
        //        try
        //        {
        //            _context.Update(announsment);
        //            await _context.SaveChangesAsync();
        //        }
        //        catch (DbUpdateConcurrencyException)
        //        {
        //            if (!AnnounsmentExists(announsment.Id))
        //            {
        //                return NotFound();
        //            }
        //            else
        //            {
        //                throw;
        //            }
        //        }
        //        return RedirectToAction(nameof(Index));
        //    }
        //    return View(announsment);
        //}

        //// GET: Announsments/Delete/5
        //public async Task<IActionResult> Delete(int? id)
        //{
        //    if (id == null)
        //    {
        //        return NotFound();
        //    }

        //    var announsment = await _context.Announsment
        //        .FirstOrDefaultAsync(m => m.Id == id);
        //    if (announsment == null)
        //    {
        //        return NotFound();
        //    }

        //    return View(announsment);
        //}

        //// POST: Announsments/Delete/5
        //[HttpPost, ActionName("Delete")]
        //[ValidateAntiForgeryToken]
        //public async Task<IActionResult> DeleteConfirmed(int id)
        //{
        //    var announsment = await _context.Announsment.FindAsync(id);
        //    _context.Announsment.Remove(announsment);
        //    await _context.SaveChangesAsync();
        //    return RedirectToAction(nameof(Index));
        //}

        //private bool AnnounsmentExists(int id)
        //{
        //    return _context.Announsment.Any(e => e.Id == id);
        //}